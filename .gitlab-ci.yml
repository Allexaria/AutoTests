stages:
  - build
  - test
  - report

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/test-runner

build_image:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA

run_tests:
  stage: test
  image: docker:24
  services:
    - docker:24-dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker pull $IMAGE_NAME:$CI_COMMIT_SHORT_SHA

    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/barbariki245/automation.framework.git

    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/barbariki245/api-requests.git



    - ls -la
    - ls automation.framework
    - ls api_requests


    - |
      docker run --rm \
        -v "$CI_PROJECT_DIR/allure-results:/projects/allure-results" \
        -v "$CI_PROJECT_DIR/automation.framework:/projects/automation.framework" \
        -v "$CI_PROJECT_DIR/api_requests:/projects/api_requests" \
        -v "$CI_PROJECT_DIR:/projects/tests" \
        -e PYTHONPATH="/projects/automation.framework:/projects/api_requests:/projects/tests" \
        "$IMAGE_NAME:$CI_COMMIT_SHORT_SHA" \
        sh -c "pytest --alluredir=/projects/allure-results"
  artifacts:
    paths:
      - allure-results
    expire_in: 1 week

allure_report:
  stage: report
  image: alpine:latest
  script:
    - apk add --no-cache curl unzip openjdk17
    - curl -L -o allure.zip https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.zip
    - unzip allure.zip -d /opt/
    - ln -s /opt/allure-2.34.0/bin/allure /usr/bin/allure
    - allure generate allure-results -o allure-report --clean
  dependencies:
    - run_tests
  artifacts:
    paths:
      - allure-report
    expire_in: 1 week
