stages:
  - build
  - test
  - report

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/test-runner
  AUTOMATION_FRAMEWORK_PATH: "/app/automation_framework"

build_image:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  script:
    - echo "Список файлов в рабочей директории:"
    - ls -l
    - echo "Проверяем Dockerfile:"
    - ls -l Dockerfile || echo "Dockerfile не найден"
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

run_tests:
  stage: test
  image: docker:24
  services:
    - docker:24-dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker pull $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker run --rm -e PYTHONPATH=/app -v $CI_PROJECT_DIR/allure-results:/app/allure-results $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  artifacts:
    paths:
      - allure-results
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

report:
  stage: report
  image: openjdk:17
  script:
    - apt-get update && apt-get install -y unzip curl
    - curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.zip
    - unzip allure.zip -d /opt/
    - ln -s /opt/allure-2.34.0/bin/allure /usr/bin/allure
    - allure generate allure-results --clean -o allure-report
    - echo "Отчёт Allure успешно сгенерирован."
  artifacts:
    paths:
      - allure-report
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
